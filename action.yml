name: "Setup VMess Proxy"
description: "Start a v2ray VMess proxy in GitHub Actions using a user-supplied config.json, with optional IP & latency test"
inputs:
  config-path:
    description: "Path to v2ray config.json"
    required: false
    default: "config.json"
  test:
    description: |
      If empty or not set, do not test.
      If set to "true", use https://www.google.com as the default test URL.
      If set to a custom URL (e.g., "https://www.bing.com"), use that for latency test.
    required: false
    default: ""
runs:
  using: "composite"
  steps:
    - name: Download v2ray-core
      shell: bash
      run: |
        {
        wget https://github.com/v2fly/v2ray-core/releases/latest/download/v2ray-linux-64.zip
        unzip v2ray-linux-64.zip -d v2ray 
        chmod +x v2ray/v2ray
        } > /dev/null 2>&1
    - name: Start v2ray
      shell: bash
      run: |
        nohup ./v2ray/v2ray run  -c ${{ inputs.config-path }} > v2ray.log 2>&1 & 
        sleep 10
    - name: Check v2ray started
      shell: bash
      run: |
        for i in {1..10}; do
          pgrep -f "v2ray" > /dev/null && echo "@Check: v2ray started successfully." && exit 0
          echo "@Check: Waiting for v2ray to start... ($i/10)"
          sleep 3
        done
        echo "@Check: v2ray failed to start."
        cat v2ray.log || true
        exit 100
    # - name: Export Proxy Env
    #   run: |
    #     echo "http_proxy=socks5://127.0.0.1:10808" >> $GITHUB_ENV
    #     echo "https_proxy=socks5://127.0.0.1:10808" >> $GITHUB_ENV
    - name: Test Outbound IP and Latency (via proxy)
      if: ${{ inputs.test != '' }}
      env:
        http_proxy: "socks5://127.0.0.1:10808"
        https_proxy: "socks5://127.0.0.1:10808"
      shell: bash
      run: |
        test_url="${{ inputs.test }}"
        test_url=$([[ "$test_url" == "true" ]] && echo "https://www.google.com" || echo "$test_url")
        ip=$(curl -s https://api.ip.sb/ip || curl -s https://ifconfig.me)
        latency=$(curl -o /dev/null -s -w "%{time_starttransfer}" "$test_url" 2>/dev/null)
        echo "@Proxy -> IP: $ip | Latency (TTFB to $test_url): $([[ -n "$latency" ]] && echo "${latency}s" || echo "Fail")"

